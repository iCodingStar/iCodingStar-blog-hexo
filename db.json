{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/next/source/about/index.html","path":"about/index.html","modified":0,"renderable":1},{"_id":"themes/next/source/categories/index.html","path":"categories/index.html","modified":0,"renderable":1},{"_id":"themes/next/source/tags/index.html","path":"tags/index.html","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/avatar.jpg","path":"uploads/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"61f3d32f17b564674ac57548b6e749848f804e31","modified":1487332812000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1487226902000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1487226902000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1487226902000},{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1487226902000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1487226902000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1487226902000},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1487226902000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1487226902000},{"_id":"themes/next/_config.yml","hash":"bd023fc8cc8169cf75d33c30b9d1dff100b5e12c","modified":1487339053844},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1487226902000},{"_id":"themes/next/gulpfile.coffee","hash":"61ef0606a8134894d7ac796bc8d0fa4ba6a94483","modified":1487226902000},{"_id":"themes/next/package.json","hash":"877cb98025e59015532c4c9a04a33e2af4ad56f9","modified":1487226902000},{"_id":"themes/next/source/404.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487248415000},{"_id":"source/_posts/2017-02-18-读书笔记-C++Primer-第5版.md","hash":"78a6a223ab215328b043e79261c02e07b9ee88f8","modified":1487398690220},{"_id":"source/_posts/2017-02-18-读书笔记-Java编程思想.md","hash":"c2c6ebc4ab4b9c2a19cef724089d0223a4fdbb01","modified":1487398690283},{"_id":"source/_posts/2017-02-18-读书笔记-c与指针.md","hash":"810739f51bf88df7159b1994d64bd805ab0e5663","modified":1487405092614},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1487226902000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1487226902000},{"_id":"themes/next/languages/de.yml","hash":"1fdea1f84b7f691f5b4dd4d2b43eeb27b10fa0c8","modified":1487226902000},{"_id":"themes/next/languages/default.yml","hash":"07a559df8f0d413cceb145a9bb8d6bbf72d93bcf","modified":1487226902000},{"_id":"themes/next/languages/en.yml","hash":"07a559df8f0d413cceb145a9bb8d6bbf72d93bcf","modified":1487226902000},{"_id":"themes/next/languages/fr-FR.yml","hash":"9fca01ef917d33ae2ae6bc04561ec6799dff5351","modified":1487226902000},{"_id":"themes/next/languages/id.yml","hash":"34396bef27c4ab9e9a3c5d3e3aa94b0e3b3a7b0d","modified":1487226902000},{"_id":"themes/next/languages/ja.yml","hash":"49f12149edcc1892b26a6207328cda64da20116d","modified":1487226902000},{"_id":"themes/next/languages/ko.yml","hash":"b6bc5d6b0c000deb44099b42d3aebb8c49dbfca9","modified":1487226902000},{"_id":"themes/next/languages/pt-BR.yml","hash":"7742ba4c0d682cbe1d38305332ebc928abd754b5","modified":1487226902000},{"_id":"themes/next/languages/pt.yml","hash":"6b660b117314cad93f08757601df3adb04c68beb","modified":1487226902000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"f6c9fafa0f5f0050cd07ca2cf5e38fbae3e28145","modified":1487226902000},{"_id":"themes/next/languages/zh-hk.yml","hash":"34c84c6d04447a25bd5eac576922a13947c000e2","modified":1487226902000},{"_id":"themes/next/languages/ru.yml","hash":"55a75ca62a4fd55af288523f5f65148441b493ab","modified":1487226902000},{"_id":"themes/next/languages/zh-tw.yml","hash":"c97a5c41149de9b17f33439b0ecf0eff6fdae50e","modified":1487226902000},{"_id":"themes/next/layout/_layout.swig","hash":"2fa3c74066843a859fac77803324a1de51044da9","modified":1487226902000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1487226902000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1487226902000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1487226902000},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1487226902000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1487226902000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1487226902000},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1487226902000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1487226902000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1487226902000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1487226902000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1487226902000},{"_id":"themes/next/source/about/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487248478000},{"_id":"themes/next/source/categories/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487248443000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487248075000},{"_id":"themes/next/source/tags/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487248457000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1487226902000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1487226902000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1487226902000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1487226902000},{"_id":"themes/next/layout/_macro/post.swig","hash":"0f67383a3501aa5151d18012cce8a3cab1fc3134","modified":1487226902000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1487226902000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"f6890992abe09d0d00cf355ed47563c88fef62fa","modified":1487226902000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"970aa668680896262b1056bb5787fc9ec8754495","modified":1487226902000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1487226902000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1487226902000},{"_id":"themes/next/layout/_partials/header.swig","hash":"adab5c3f7b173f1b45454787f39dde07aea03483","modified":1487226902000},{"_id":"themes/next/layout/_partials/head.swig","hash":"a0eafe24d1dae30c790ae35612154b3ffbbd5cce","modified":1487226902000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"39d613e5a9f8389d4ea52d6082502af8e833b9f2","modified":1487226902000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1487226902000},{"_id":"themes/next/layout/_partials/search.swig","hash":"1431719d1dbba3f5ee385eebc46376d1a960b2d5","modified":1487226902000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1487226902000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1487226902000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1487226902000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4512867d80d9eddfc3a0f5fea3c456f33aa9d522","modified":1487226902000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1487226902000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1487226902000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1487226902000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1487226902000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1487226902000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1487248075000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1487248076000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1487248076000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1487248076000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1487248076000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1487248076000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1487248076000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1487248076000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1487248076000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1487248077000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1487248077000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1487248077000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1487248077000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1487248077000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1487248077000},{"_id":"themes/next/source/uploads/avatar.jpg","hash":"e32765ae1b0526e306cb733533ae7ae897b873f3","modified":1487338245341},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487226902000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487226902000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487248078000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487248078000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487248078000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487248079000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487248078000},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1487226902000},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"636f1181dd5887a70b4a08ca8f655d4e46635792","modified":1487226902000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1487226902000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1487226902000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1487226902000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1487226902000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1487226902000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1487226902000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1487226902000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1487226902000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1487226902000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1487226902000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"e46900412e28f529c26e25e6bada342006435a32","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"a279e1881208aff2f669fe235e9661ab825bc540","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"b460e27db3dcd4ab40b17d8926a5c4e624f293a9","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1487226902000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1487248078000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1487248078000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1487248079000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c459aa6d607d8bcb747544e74f6ad0b8374aa3b1","modified":1487248079000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"fc185c6cec79593775d1c2440dbe2a71cfbe2e99","modified":1487248079000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1487248078000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1487248080000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1487248080000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1487248080000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1487248080000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1487248080000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1487248080000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1487248080000},{"_id":"themes/next/source/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1487248080000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1487248082000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1487248081000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1487248082000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1487248082000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1487248083000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1487248083000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1487248083000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1487248082000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1487248084000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"c1072942459fa0880e8a33a1bd929176b62b4171","modified":1487248083000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1487248083000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1487248083000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1487248084000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1487248083000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1487248086000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1487248086000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1487248086000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1487248086000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1487248086000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1487248085000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1487248085000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1487248085000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1487248085000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1487248085000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1487248085000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1487248084000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-mta.swig","hash":"a652f202bd5b30c648c228ab8f0e997eb4928e44","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/analytics/vkontakte-api.swig","hash":"a07d2ba3d0c6be084dd34a85f176765e8fff87f7","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/comments/livere.swig","hash":"7240f2e5ec7115f8abbbc4c9ef73d4bed180fdc7","modified":1487226902000},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1487226902000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1487248087000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1487248087000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1487248087000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1487248087000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1487248087000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1487248087000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1487248088000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1487248088000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1487248088000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1487248088000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1487248088000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1487248088000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1487248089000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1487248089000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1487248089000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1487248089000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1487248089000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1487248090000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1487248089000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"ff9f163bb05c0709577040a875924d36c9ab99d6","modified":1487248091000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"dcf9fe43b2ef78b923118ba39efedb38760e76b1","modified":1487248091000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"1408209dfb9a22a0982a30bdbd14842c2b53f264","modified":1487248091000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9b63bd8effc7cf4b96acdea4d73add7df934a222","modified":1487248091000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1487248091000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1487248091000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1487248090000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1487248090000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1487248090000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1487248090000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1487248090000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1487248092000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1487248092000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1487248092000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1487248092000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1487248092000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1487248092000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1487248092000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1487248092000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1487248093000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1487248093000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1487248093000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1487248093000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1487248094000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1487248094000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1487248094000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1487248096000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1487248096000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1487248095000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1487248095000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1487248095000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1487248095000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1487248086000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1487248097000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1487248097000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1487248097000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1487248097000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1487248097000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1487248097000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1487248098000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4b7f81e1006e7acee3d1c840ccba155239f830cc","modified":1487248098000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1487248098000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1487248098000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1487248098000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1487248099000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1487248099000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1487248099000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1487248099000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1487248099000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1487248099000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1487248100000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1487248099000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"b9a2e76f019a5941191f1263b54aef7b69c48789","modified":1487248100000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1487248100000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1487248100000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1487248100000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1487248100000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1487248100000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bfd806d0a9f21446a22df82ac02e37d0075cc3b5","modified":1487248100000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1487248101000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1487248101000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1487248101000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1487248101000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1487248101000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1487248101000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1487248101000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1487248101000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1487248101000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1487248102000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1487248102000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1487248102000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1487248102000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"3eb73cee103b810fa56901577ecb9c9bb1793cff","modified":1487248102000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"eba491ae624b4c843c8be4c94a044085dad4ba0f","modified":1487248103000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1487248103000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1487248103000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1487248103000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1487248103000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1487248103000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1487248103000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1487248103000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1487248104000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1487248104000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1487248104000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1487248105000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1487248105000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1487248105000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1487248105000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1487248105000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1487248105000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1487248095000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1487248081000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1487248095000},{"_id":"public/atom.xml","hash":"22feb95c709794a7ffbc34ba5d2ec0c4f93efeff","modified":1487405117117},{"_id":"public/sitemap.xml","hash":"8cec1896e8e44d07d2376e2478b90cf397ac3d16","modified":1487405117118},{"_id":"public/blog/2017/02/18/读书笔记-Java编程思想.html","hash":"e8e733943f4e7490fdd048bab541e1f99806c8bd","modified":1487405117173},{"_id":"public/blog/2017/02/18/读书笔记-C++Primer-第5版.html","hash":"cb43f488febd124796099cfd049a4fa89bc9d4b9","modified":1487405117173},{"_id":"public/archives/index.html","hash":"b03096aae1969fab90ff7eb129c3fde86aa7b5dc","modified":1487405117173},{"_id":"public/archives/2017/index.html","hash":"4adb47ead6226d563ff051a8e1e5a9c33fdb651a","modified":1487405117173},{"_id":"public/archives/2017/02/index.html","hash":"82fa602bac1f88c87aebabc7f2897cad32c72d89","modified":1487405117173},{"_id":"public/tags/读书笔记/index.html","hash":"b50714ea7a51867cacc1dabc4d1ce77daf7750e1","modified":1487405117173},{"_id":"public/blog/2017/02/18/读书笔记-c与指针.html","hash":"2fd0ce9d7a85319da52ef752cd252010c0eae7b9","modified":1487405117173},{"_id":"public/index.html","hash":"532bebe09abcd285c3e13b0a41943d3552284561","modified":1487405117177},{"_id":"public/CNAME","hash":"61f3d32f17b564674ac57548b6e749848f804e31","modified":1487405117190},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1487405117190},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1487405117190},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1487405117190},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1487405117191},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1487405117191},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1487405117191},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1487405117191},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1487405117191},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1487405117191},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1487405117191},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1487405117191},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1487405117191},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1487405117191},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1487405117191},{"_id":"public/uploads/avatar.jpg","hash":"e32765ae1b0526e306cb733533ae7ae897b873f3","modified":1487405117192},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1487405117192},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1487405117192},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1487405117192},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1487405117192},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1487405117192},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1487405117192},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1487405117192},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1487405117192},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1487405117192},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1487405117192},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1487405117710},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1487405117715},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1487405117718},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1487405117718},{"_id":"public/404.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487405117724},{"_id":"public/categories/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487405117724},{"_id":"public/tags/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487405117724},{"_id":"public/about/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487405117724},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1487405117724},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1487405117724},{"_id":"public/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1487405117724},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1487405117724},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1487405117725},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1487405117725},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1487405117725},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1487405117725},{"_id":"public/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1487405117725},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1487405117725},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1487405117725},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1487405117725},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1487405117725},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1487405117725},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1487405117725},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1487405117725},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1487405117725},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1487405117725},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1487405117725},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1487405117725},{"_id":"public/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1487405117725},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1487405117725},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1487405117725},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1487405117725},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1487405117725},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1487405117725},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1487405117725},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1487405117725},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1487405117725},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1487405117726},{"_id":"public/css/main.css","hash":"ee406b78af59d2183149bc1d9a1c3531c4a81af7","modified":1487405117726},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1487405117726},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1487405117726},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1487405117726},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1487405117726},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1487405117726},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1487405117726},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1487405117726},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1487405117726},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1487405117726},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1487405117726},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1487405117726},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1487405117747}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"C++Primer(note)","date":"2017-02-18T06:08:06.000Z","_content":"","source":"_posts/2017-02-18-读书笔记-C++Primer-第5版.md","raw":"---\ntitle: C++Primer(note)\ndate: 2017-02-18 14:08:06\ntags: 读书笔记\n---\n","slug":"读书笔记-C++Primer-第5版","published":1,"updated":"2017-02-18T06:18:10.220Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizayloiz00006wul698wn1i2","content":"","excerpt":"","more":""},{"title":"Java编程思想(note)","date":"2017-02-18T06:11:31.000Z","_content":"","source":"_posts/2017-02-18-读书笔记-Java编程思想.md","raw":"---\ntitle: Java编程思想(note)\ndate: 2017-02-18 14:11:31\ntags: 读书笔记\n---\n","slug":"读书笔记-Java编程思想","published":1,"updated":"2017-02-18T06:18:10.283Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizayloj700016wulwy3u75x3","content":"","excerpt":"","more":""},{"title":"c与指针(note)","date":"2017-02-18T02:49:28.000Z","_content":"# 快速上手\n# 基本概念\n# 数据\n# 语句\n# 操作符和表达式\n# 指针\n# 函数\n   c的函数与其它函数相似之处甚多。本章正式描述c的函数。\n## 函数定义\n   类型\n   函数名（形式参数）\n   代码块\n   ``` c\n    function_name()\n    {\n    \n    }\n   ```\n### 程序7.1:在数组中寻找一个整型值\n    ``` c\n    /*\n    ** 在数组中寻找某个特定值的存储位置，并返回一个指向该位置的指针\n    */\n    int *\n    find_int(int key, int array[], int array_len) {\n        for (int i = 0; i < array_len; ++i) {\n            if (array[i] == key) {\n                return &array[i];\n            }\n        }\n        return NULL;\n    }\n    ```\n## 函数声明\n   当编译器遇到一个函数调用时，它产生代码传递参数并调用这个函数，而且接收函数返回值（如果这个函数有返回值的话）。但是编译器如何知道这个函数接受的是什么类型的和多少数量的参数呢？如何知道函数的返回值类型呢？   \n### 原型\n   1. 如果同一源文件的前面已经出现了该函数的定义，编译器就会记住它的参数数量和类型。\n   2. 使用函数原型。原型总结了函数定义的起始部分的声明，向编译器提供了如何调用该元素的完整信息。使用原型最方便的方法是把原型置于一个单独的文件，当其他源文件需要\n这个函数原型时，就是用`#include`指令包含该文件。\n   ``` c\n    /**\n     * 函数原型:注意最后面的那个分号，它区分了函数原型和函数定义的起始部分。原型告诉编译器函数的参数数量和每个参数的类型以及函数的返回类型。\n     */\n    int *\n    find_int(int key, int array[], int array_len);\n   ```\n   \n#### 总结：从几个方面看，第2种方法比第1种方法更好。\n   1. 现在函数原型具有文件作用域。原型的一份拷贝可以作用于整个源文件，较之在函数每次调用前单独写一份原型要容易的多。\n   2. 现在函数原型只书写一次，这样就不会出现函数的多份原型的拷贝之间不一致的现象。\n   3. 如果对函数的定义进行了修改，我们只需要修改原型，并重新编译所有包含了该原型的源文件即可。\n   4. 如果函数的原型同时被`#include`指令包含到定义的源文件中，编译器就可以确认函数原型与函数定义是否一致。\n   \n#### 思考：含糊声明存在危害。\n   1. 考虑下面声明，它看上去有点含糊：\n   `int * func();`\n   2. 它即可以看作是一个旧式的声明(只给出func函数的返回类型),也可以看作是新式的没有参数的函数声明。最终，它会被解释成旧式风格的函数声明，目的是保持与ANSI标准之前的程序的兼容性。一个没有参数的函数声明应该写成如下的样子：\n   `int * func(void);`\n   3. 关键字void提示没有任何参数，而不是表示它是一个类型为void的参数。\n   \n### 函数的缺省认定\n   1. 当函数调用一个无法见到原型的函数时，编译器会认为函数返回一个整型值。对于那些不返回整型的函数，这种认定会引起错误。\n   \n## 函数的参数\n   1. c函数所有参数均以\"传值调用\"的方式进行传递。这意味着函数将获得参数值的一份拷贝，这样函数可以放心的修改这个拷贝值。而不必担心修改函数调用程序实际传给它的参数。这种调用与Modula和Pascal中的值参数（不是var参数）相同。\n   2. 但是如果被传递的参数是一个数组名，并且在函数中使用数组的下标引用该数组的参数，那么函数对数组元素进行的修改实际修改的是调用函数程序中的数组元素。函数将访问调用该函数程序的数组元素，数组并不会被复制。这个行为被称为“传址调用”。数组名的值实际上是一个指针，传递给函数的其实是这个指针的一份拷贝。\n   \n### 传参规则\n   1. 传递给函数的标量参数是传值调用的。\n   2. 传递给函数的数组参数，在行为上就像是它们通过传址调用的。\n   \n### 程序示例\n\n#### 奇偶校验\n    ```\n    /**\n     * 程序 7.2 奇偶校验\n     */\n    int\n    even_parity(int value, int n_bits) {\n        int parity = 0;\n        /**\n         * 计数值中为1的位的个数\n         */\n        while (n_bits > 0) {\n            parity += value & 1;\n            value >>= 1;\n            n_bits--;\n        }\n        // 如果计数器的最低位是0,返回TRUE(表示1的位数为偶数个)\n        return (parity % 2) == 0;\n    }\n    ```\n   1. 这个函数在执行过程中会破坏两个参数的值。但这无妨，因为参数是通过值传递调用的。\n   \n#### 整数交换，无效的版本\n    ```\n        /**\n         * 程序 7.3a \n         * 交换程序中的两个整数(没有效果)\n         */\n        void\n        swap(int a, int b) {\n            int temp = a;\n            a = b;\n            b = temp;\n        }\n    ```\n   1. 这个函数希望修改程序所传递的参数。但是这个程序是无效的，因为它们交换的实际上是参数的拷贝。\n   \n#### 整数交换，有效的版本\n   为了访问调用程序的值，你必须向程序传递你所希望修改的变量的指针。接着函数必须对指针进行间接访问操作，修改需要改变的变量。\n   ```\n        /**\n         * 程序 7.3b\n         * 交换程序中的两个整数\n         */\n        void\n        swap(int *a, int *b) {\n            int temp;\n            temp = *a;\n            *a = *b;\n            *b = temp;\n        }\n   ```\n#### 将一个数组设置为0\n    ``` c\n        /**\n         * 程序 7.4 把一个数组的所有元素都置为0\n         */\n        void clear_array(int array[], int n_elements) {\n            while (n_elements > 0) {\n                array[--n_elements] = 0;\n            }\n        }\n    ```\n   1. `n_elements` 是一个标量参数，所以它是传值调用的。在函数中修改它的值并不会影响调用程序中对应参数，另一方面，函数确实把调用函数的数组都置为0.\n   2. 数组的值实际上是一个指针，下标引用实际上是对这个指针进行间接访问。\n   3. 在声明数组参数时，不指定它的长度是合法的，因为函数并不为数组分配内存。间接访问操作将访问调用程序中的数组元素。\n   \n### ADT 和 黑盒\n   1. c可以用于设计和实现抽象数据类型，因为它可以限制函数和数据定义的作用域。，这个技巧也被成为黑盒设计。抽象数据类型的想法是hi很简单的--模块具有功能说明和接口说明，前者说明模块所执行的任务，后者定义模块的使用。\n   2. 限制对模块的访问时通过 `static` 的合理使用实现的。\n   \n#### 地址列表模块案例\n    ``` c\n        #ifndef CHAPTER07_FUNC_ADDRLIST_H\n        #define CHAPTER07_FUNC_ADDRLIST_H\n        /**\n         * 地址列表模块声明\n         */\n        \n        /**\n         * 数据特征\n         * 各种数据的最大长度，包括结尾的NUL字符和地址的最大数量\n         */\n        \n        #define NAME_LENGTH 30 /*允许出现的最长名字*/\n        #define ADDR_LENGTH 100 /*允许出现地址的最大长度*/\n        #define PHONE_LENGTH 11/*允许出现的最大号码长度*/\n        #define MAX_ADDRESSES 1000/*允许出现的字多地址个数*/\n        \n        /**\n         * 给出一个名字，查找对应的地址\n         */\n        char const *\n        lookup_address(char const *name);\n        \n        /**\n         * 给出一个名字，查找对应号码\n         */\n        char const *\n        lookup_phone(char const *name);\n        \n        #endif //CHAPTER07_FUNC_ADDRLIST_H\n    ```\n    ``` c\n        /**\n         * 用于维护一个列表的抽象数据类型\n         */\n        \n        #include \"addrlist.h\"\n        #include <stdio.h>\n        #include <string.h>\n        \n        /**\n         * 每个地址的三个部分，分别保存在数组的对应元素中\n         */\n        static char name[MAX_ADDRESSES][NAME_LENGTH] = {\"1\", \"2\", \"3\"};\n        static char address[MAX_ADDRESSES][ADDR_LENGTH] = {\"4\", \"5\", \"6\"};\n        static char phone[MAX_ADDRESSES][PHONE_LENGTH] = {\"7\", \"8\", \"9\"};\n        \n        /**\n        ** 这个函数在数组中查找一个名字并返回对应下标\n        **/\n        static int find_entry(char const *name_to_find) {\n            int entry;\n            for (int entry = 0; entry < MAX_ADDRESSES; ++entry) {\n                if (strcmp(name_to_find, name[entry]) == 0) {\n                    return entry;\n                }\n                return -1;\n            }\n        }\n        \n        char const *\n        lookup_address(char const *name) {\n            int entry;\n            entry = find_entry(name);\n            if (entry == -1) {\n                return NULL;\n            } else {\n                return address[entry];\n            }\n        }\n        \n        char const *\n        lookup_phone(char const *name) {\n            int entry;\n            entry = find_entry(name);\n            if (entry == -1) {\n                return NULL;\n            } else {\n                return phone[entry];\n            }\n        }\n    ```\n\n\n   \n   \n   \n   ","source":"_posts/2017-02-18-读书笔记-c与指针.md","raw":"---\ntitle: c与指针(note)\ndate: 2017-02-18 10:49:28\ntags: 读书笔记\n---\n# 快速上手\n# 基本概念\n# 数据\n# 语句\n# 操作符和表达式\n# 指针\n# 函数\n   c的函数与其它函数相似之处甚多。本章正式描述c的函数。\n## 函数定义\n   类型\n   函数名（形式参数）\n   代码块\n   ``` c\n    function_name()\n    {\n    \n    }\n   ```\n### 程序7.1:在数组中寻找一个整型值\n    ``` c\n    /*\n    ** 在数组中寻找某个特定值的存储位置，并返回一个指向该位置的指针\n    */\n    int *\n    find_int(int key, int array[], int array_len) {\n        for (int i = 0; i < array_len; ++i) {\n            if (array[i] == key) {\n                return &array[i];\n            }\n        }\n        return NULL;\n    }\n    ```\n## 函数声明\n   当编译器遇到一个函数调用时，它产生代码传递参数并调用这个函数，而且接收函数返回值（如果这个函数有返回值的话）。但是编译器如何知道这个函数接受的是什么类型的和多少数量的参数呢？如何知道函数的返回值类型呢？   \n### 原型\n   1. 如果同一源文件的前面已经出现了该函数的定义，编译器就会记住它的参数数量和类型。\n   2. 使用函数原型。原型总结了函数定义的起始部分的声明，向编译器提供了如何调用该元素的完整信息。使用原型最方便的方法是把原型置于一个单独的文件，当其他源文件需要\n这个函数原型时，就是用`#include`指令包含该文件。\n   ``` c\n    /**\n     * 函数原型:注意最后面的那个分号，它区分了函数原型和函数定义的起始部分。原型告诉编译器函数的参数数量和每个参数的类型以及函数的返回类型。\n     */\n    int *\n    find_int(int key, int array[], int array_len);\n   ```\n   \n#### 总结：从几个方面看，第2种方法比第1种方法更好。\n   1. 现在函数原型具有文件作用域。原型的一份拷贝可以作用于整个源文件，较之在函数每次调用前单独写一份原型要容易的多。\n   2. 现在函数原型只书写一次，这样就不会出现函数的多份原型的拷贝之间不一致的现象。\n   3. 如果对函数的定义进行了修改，我们只需要修改原型，并重新编译所有包含了该原型的源文件即可。\n   4. 如果函数的原型同时被`#include`指令包含到定义的源文件中，编译器就可以确认函数原型与函数定义是否一致。\n   \n#### 思考：含糊声明存在危害。\n   1. 考虑下面声明，它看上去有点含糊：\n   `int * func();`\n   2. 它即可以看作是一个旧式的声明(只给出func函数的返回类型),也可以看作是新式的没有参数的函数声明。最终，它会被解释成旧式风格的函数声明，目的是保持与ANSI标准之前的程序的兼容性。一个没有参数的函数声明应该写成如下的样子：\n   `int * func(void);`\n   3. 关键字void提示没有任何参数，而不是表示它是一个类型为void的参数。\n   \n### 函数的缺省认定\n   1. 当函数调用一个无法见到原型的函数时，编译器会认为函数返回一个整型值。对于那些不返回整型的函数，这种认定会引起错误。\n   \n## 函数的参数\n   1. c函数所有参数均以\"传值调用\"的方式进行传递。这意味着函数将获得参数值的一份拷贝，这样函数可以放心的修改这个拷贝值。而不必担心修改函数调用程序实际传给它的参数。这种调用与Modula和Pascal中的值参数（不是var参数）相同。\n   2. 但是如果被传递的参数是一个数组名，并且在函数中使用数组的下标引用该数组的参数，那么函数对数组元素进行的修改实际修改的是调用函数程序中的数组元素。函数将访问调用该函数程序的数组元素，数组并不会被复制。这个行为被称为“传址调用”。数组名的值实际上是一个指针，传递给函数的其实是这个指针的一份拷贝。\n   \n### 传参规则\n   1. 传递给函数的标量参数是传值调用的。\n   2. 传递给函数的数组参数，在行为上就像是它们通过传址调用的。\n   \n### 程序示例\n\n#### 奇偶校验\n    ```\n    /**\n     * 程序 7.2 奇偶校验\n     */\n    int\n    even_parity(int value, int n_bits) {\n        int parity = 0;\n        /**\n         * 计数值中为1的位的个数\n         */\n        while (n_bits > 0) {\n            parity += value & 1;\n            value >>= 1;\n            n_bits--;\n        }\n        // 如果计数器的最低位是0,返回TRUE(表示1的位数为偶数个)\n        return (parity % 2) == 0;\n    }\n    ```\n   1. 这个函数在执行过程中会破坏两个参数的值。但这无妨，因为参数是通过值传递调用的。\n   \n#### 整数交换，无效的版本\n    ```\n        /**\n         * 程序 7.3a \n         * 交换程序中的两个整数(没有效果)\n         */\n        void\n        swap(int a, int b) {\n            int temp = a;\n            a = b;\n            b = temp;\n        }\n    ```\n   1. 这个函数希望修改程序所传递的参数。但是这个程序是无效的，因为它们交换的实际上是参数的拷贝。\n   \n#### 整数交换，有效的版本\n   为了访问调用程序的值，你必须向程序传递你所希望修改的变量的指针。接着函数必须对指针进行间接访问操作，修改需要改变的变量。\n   ```\n        /**\n         * 程序 7.3b\n         * 交换程序中的两个整数\n         */\n        void\n        swap(int *a, int *b) {\n            int temp;\n            temp = *a;\n            *a = *b;\n            *b = temp;\n        }\n   ```\n#### 将一个数组设置为0\n    ``` c\n        /**\n         * 程序 7.4 把一个数组的所有元素都置为0\n         */\n        void clear_array(int array[], int n_elements) {\n            while (n_elements > 0) {\n                array[--n_elements] = 0;\n            }\n        }\n    ```\n   1. `n_elements` 是一个标量参数，所以它是传值调用的。在函数中修改它的值并不会影响调用程序中对应参数，另一方面，函数确实把调用函数的数组都置为0.\n   2. 数组的值实际上是一个指针，下标引用实际上是对这个指针进行间接访问。\n   3. 在声明数组参数时，不指定它的长度是合法的，因为函数并不为数组分配内存。间接访问操作将访问调用程序中的数组元素。\n   \n### ADT 和 黑盒\n   1. c可以用于设计和实现抽象数据类型，因为它可以限制函数和数据定义的作用域。，这个技巧也被成为黑盒设计。抽象数据类型的想法是hi很简单的--模块具有功能说明和接口说明，前者说明模块所执行的任务，后者定义模块的使用。\n   2. 限制对模块的访问时通过 `static` 的合理使用实现的。\n   \n#### 地址列表模块案例\n    ``` c\n        #ifndef CHAPTER07_FUNC_ADDRLIST_H\n        #define CHAPTER07_FUNC_ADDRLIST_H\n        /**\n         * 地址列表模块声明\n         */\n        \n        /**\n         * 数据特征\n         * 各种数据的最大长度，包括结尾的NUL字符和地址的最大数量\n         */\n        \n        #define NAME_LENGTH 30 /*允许出现的最长名字*/\n        #define ADDR_LENGTH 100 /*允许出现地址的最大长度*/\n        #define PHONE_LENGTH 11/*允许出现的最大号码长度*/\n        #define MAX_ADDRESSES 1000/*允许出现的字多地址个数*/\n        \n        /**\n         * 给出一个名字，查找对应的地址\n         */\n        char const *\n        lookup_address(char const *name);\n        \n        /**\n         * 给出一个名字，查找对应号码\n         */\n        char const *\n        lookup_phone(char const *name);\n        \n        #endif //CHAPTER07_FUNC_ADDRLIST_H\n    ```\n    ``` c\n        /**\n         * 用于维护一个列表的抽象数据类型\n         */\n        \n        #include \"addrlist.h\"\n        #include <stdio.h>\n        #include <string.h>\n        \n        /**\n         * 每个地址的三个部分，分别保存在数组的对应元素中\n         */\n        static char name[MAX_ADDRESSES][NAME_LENGTH] = {\"1\", \"2\", \"3\"};\n        static char address[MAX_ADDRESSES][ADDR_LENGTH] = {\"4\", \"5\", \"6\"};\n        static char phone[MAX_ADDRESSES][PHONE_LENGTH] = {\"7\", \"8\", \"9\"};\n        \n        /**\n        ** 这个函数在数组中查找一个名字并返回对应下标\n        **/\n        static int find_entry(char const *name_to_find) {\n            int entry;\n            for (int entry = 0; entry < MAX_ADDRESSES; ++entry) {\n                if (strcmp(name_to_find, name[entry]) == 0) {\n                    return entry;\n                }\n                return -1;\n            }\n        }\n        \n        char const *\n        lookup_address(char const *name) {\n            int entry;\n            entry = find_entry(name);\n            if (entry == -1) {\n                return NULL;\n            } else {\n                return address[entry];\n            }\n        }\n        \n        char const *\n        lookup_phone(char const *name) {\n            int entry;\n            entry = find_entry(name);\n            if (entry == -1) {\n                return NULL;\n            } else {\n                return phone[entry];\n            }\n        }\n    ```\n\n\n   \n   \n   \n   ","slug":"读书笔记-c与指针","published":1,"updated":"2017-02-18T08:04:52.614Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizayloje00036wuliy5t0k6r","content":"<h1 id=\"快速上手\"><a href=\"#快速上手\" class=\"headerlink\" title=\"快速上手\"></a>快速上手</h1><h1 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h1><h1 id=\"数据\"><a href=\"#数据\" class=\"headerlink\" title=\"数据\"></a>数据</h1><h1 id=\"语句\"><a href=\"#语句\" class=\"headerlink\" title=\"语句\"></a>语句</h1><h1 id=\"操作符和表达式\"><a href=\"#操作符和表达式\" class=\"headerlink\" title=\"操作符和表达式\"></a>操作符和表达式</h1><h1 id=\"指针\"><a href=\"#指针\" class=\"headerlink\" title=\"指针\"></a>指针</h1><h1 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h1><p>   c的函数与其它函数相似之处甚多。本章正式描述c的函数。</p>\n<h2 id=\"函数定义\"><a href=\"#函数定义\" class=\"headerlink\" title=\"函数定义\"></a>函数定义</h2><p>   类型<br>   函数名（形式参数）<br>   代码块<br>   <figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">function_name()</div><div class=\"line\">&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"程序7-1-在数组中寻找一个整型值\"><a href=\"#程序7-1-在数组中寻找一个整型值\" class=\"headerlink\" title=\"程序7.1:在数组中寻找一个整型值\"></a>程序7.1:在数组中寻找一个整型值</h3><pre><code><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\">** 在数组中寻找某个特定值的存储位置，并返回一个指向该位置的指针</div><div class=\"line\">*/</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> *</span></div><div class=\"line\"><span class=\"title\">find_int</span><span class=\"params\">(<span class=\"keyword\">int</span> key, <span class=\"keyword\">int</span> <span class=\"built_in\">array</span>[], <span class=\"keyword\">int</span> array_len)</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; array_len; ++i) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">array</span>[i] == key) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> &amp;<span class=\"built_in\">array</span>[i];</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</code></pre><h2 id=\"函数声明\"><a href=\"#函数声明\" class=\"headerlink\" title=\"函数声明\"></a>函数声明</h2><p>   当编译器遇到一个函数调用时，它产生代码传递参数并调用这个函数，而且接收函数返回值（如果这个函数有返回值的话）。但是编译器如何知道这个函数接受的是什么类型的和多少数量的参数呢？如何知道函数的返回值类型呢？   </p>\n<h3 id=\"原型\"><a href=\"#原型\" class=\"headerlink\" title=\"原型\"></a>原型</h3><ol>\n<li>如果同一源文件的前面已经出现了该函数的定义，编译器就会记住它的参数数量和类型。</li>\n<li>使用函数原型。原型总结了函数定义的起始部分的声明，向编译器提供了如何调用该元素的完整信息。使用原型最方便的方法是把原型置于一个单独的文件，当其他源文件需要<br>这个函数原型时，就是用<code>#include</code>指令包含该文件。<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 函数原型:注意最后面的那个分号，它区分了函数原型和函数定义的起始部分。原型告诉编译器函数的参数数量和每个参数的类型以及函数的返回类型。</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> *</span></div><div class=\"line\"><span class=\"title\">find_int</span><span class=\"params\">(<span class=\"keyword\">int</span> key, <span class=\"keyword\">int</span> <span class=\"built_in\">array</span>[], <span class=\"keyword\">int</span> array_len)</span>;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"总结：从几个方面看，第2种方法比第1种方法更好。\"><a href=\"#总结：从几个方面看，第2种方法比第1种方法更好。\" class=\"headerlink\" title=\"总结：从几个方面看，第2种方法比第1种方法更好。\"></a>总结：从几个方面看，第2种方法比第1种方法更好。</h4><ol>\n<li>现在函数原型具有文件作用域。原型的一份拷贝可以作用于整个源文件，较之在函数每次调用前单独写一份原型要容易的多。</li>\n<li>现在函数原型只书写一次，这样就不会出现函数的多份原型的拷贝之间不一致的现象。</li>\n<li>如果对函数的定义进行了修改，我们只需要修改原型，并重新编译所有包含了该原型的源文件即可。</li>\n<li>如果函数的原型同时被<code>#include</code>指令包含到定义的源文件中，编译器就可以确认函数原型与函数定义是否一致。</li>\n</ol>\n<h4 id=\"思考：含糊声明存在危害。\"><a href=\"#思考：含糊声明存在危害。\" class=\"headerlink\" title=\"思考：含糊声明存在危害。\"></a>思考：含糊声明存在危害。</h4><ol>\n<li>考虑下面声明，它看上去有点含糊：<br><code>int * func();</code></li>\n<li>它即可以看作是一个旧式的声明(只给出func函数的返回类型),也可以看作是新式的没有参数的函数声明。最终，它会被解释成旧式风格的函数声明，目的是保持与ANSI标准之前的程序的兼容性。一个没有参数的函数声明应该写成如下的样子：<br><code>int * func(void);</code></li>\n<li>关键字void提示没有任何参数，而不是表示它是一个类型为void的参数。</li>\n</ol>\n<h3 id=\"函数的缺省认定\"><a href=\"#函数的缺省认定\" class=\"headerlink\" title=\"函数的缺省认定\"></a>函数的缺省认定</h3><ol>\n<li>当函数调用一个无法见到原型的函数时，编译器会认为函数返回一个整型值。对于那些不返回整型的函数，这种认定会引起错误。</li>\n</ol>\n<h2 id=\"函数的参数\"><a href=\"#函数的参数\" class=\"headerlink\" title=\"函数的参数\"></a>函数的参数</h2><ol>\n<li>c函数所有参数均以”传值调用”的方式进行传递。这意味着函数将获得参数值的一份拷贝，这样函数可以放心的修改这个拷贝值。而不必担心修改函数调用程序实际传给它的参数。这种调用与Modula和Pascal中的值参数（不是var参数）相同。</li>\n<li>但是如果被传递的参数是一个数组名，并且在函数中使用数组的下标引用该数组的参数，那么函数对数组元素进行的修改实际修改的是调用函数程序中的数组元素。函数将访问调用该函数程序的数组元素，数组并不会被复制。这个行为被称为“传址调用”。数组名的值实际上是一个指针，传递给函数的其实是这个指针的一份拷贝。</li>\n</ol>\n<h3 id=\"传参规则\"><a href=\"#传参规则\" class=\"headerlink\" title=\"传参规则\"></a>传参规则</h3><ol>\n<li>传递给函数的标量参数是传值调用的。</li>\n<li>传递给函数的数组参数，在行为上就像是它们通过传址调用的。</li>\n</ol>\n<h3 id=\"程序示例\"><a href=\"#程序示例\" class=\"headerlink\" title=\"程序示例\"></a>程序示例</h3><h4 id=\"奇偶校验\"><a href=\"#奇偶校验\" class=\"headerlink\" title=\"奇偶校验\"></a>奇偶校验</h4><pre><code><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 程序 7.2 奇偶校验</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span></span></div><div class=\"line\"><span class=\"title\">even_parity</span>(<span class=\"params\"><span class=\"keyword\">int</span> <span class=\"keyword\">value</span>, <span class=\"keyword\">int</span> n_bits</span>) &#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> parity = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 计数值中为1的位的个数</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"keyword\">while</span> (n_bits &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">        parity += <span class=\"keyword\">value</span> &amp; <span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">value</span> &gt;&gt;= <span class=\"number\">1</span>;</div><div class=\"line\">        n_bits--;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">// 如果计数器的最低位是0,返回TRUE(表示1的位数为偶数个)</span></div><div class=\"line\">    <span class=\"keyword\">return</span> (parity % <span class=\"number\">2</span>) == <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</code></pre><ol>\n<li>这个函数在执行过程中会破坏两个参数的值。但这无妨，因为参数是通过值传递调用的。</li>\n</ol>\n<h4 id=\"整数交换，无效的版本\"><a href=\"#整数交换，无效的版本\" class=\"headerlink\" title=\"整数交换，无效的版本\"></a>整数交换，无效的版本</h4><pre><code><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 程序 7.3a </div><div class=\"line\"> * 交换程序中的两个整数(没有效果)</div><div class=\"line\"> */</div><div class=\"line\">void</div><div class=\"line\"><span class=\"keyword\">swap(int </span>a, int <span class=\"keyword\">b) </span>&#123;</div><div class=\"line\">    int temp = a<span class=\"comment\">;</span></div><div class=\"line\">    a = <span class=\"keyword\">b;</span></div><div class=\"line\">    <span class=\"keyword\">b </span>= temp<span class=\"comment\">;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</code></pre><ol>\n<li>这个函数希望修改程序所传递的参数。但是这个程序是无效的，因为它们交换的实际上是参数的拷贝。</li>\n</ol>\n<h4 id=\"整数交换，有效的版本\"><a href=\"#整数交换，有效的版本\" class=\"headerlink\" title=\"整数交换，有效的版本\"></a>整数交换，有效的版本</h4><p>   为了访问调用程序的值，你必须向程序传递你所希望修改的变量的指针。接着函数必须对指针进行间接访问操作，修改需要改变的变量。<br>   <figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 程序 7.3b</div><div class=\"line\"> * 交换程序中的两个整数</div><div class=\"line\"> */</div><div class=\"line\">void</div><div class=\"line\"><span class=\"keyword\">swap(int </span>*a, int *<span class=\"keyword\">b) </span>&#123;</div><div class=\"line\">    int temp<span class=\"comment\">;</span></div><div class=\"line\">    temp = *a<span class=\"comment\">;</span></div><div class=\"line\">    *a = *<span class=\"keyword\">b;</span></div><div class=\"line\">    *<span class=\"keyword\">b </span>= temp<span class=\"comment\">;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"将一个数组设置为0\"><a href=\"#将一个数组设置为0\" class=\"headerlink\" title=\"将一个数组设置为0\"></a>将一个数组设置为0</h4><pre><code><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 程序 7.4 把一个数组的所有元素都置为0</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clear_array</span><span class=\"params\">(<span class=\"keyword\">int</span> <span class=\"built_in\">array</span>[], <span class=\"keyword\">int</span> n_elements)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">while</span> (n_elements &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">        <span class=\"built_in\">array</span>[--n_elements] = <span class=\"number\">0</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</code></pre><ol>\n<li><code>n_elements</code> 是一个标量参数，所以它是传值调用的。在函数中修改它的值并不会影响调用程序中对应参数，另一方面，函数确实把调用函数的数组都置为0.</li>\n<li>数组的值实际上是一个指针，下标引用实际上是对这个指针进行间接访问。</li>\n<li>在声明数组参数时，不指定它的长度是合法的，因为函数并不为数组分配内存。间接访问操作将访问调用程序中的数组元素。</li>\n</ol>\n<h3 id=\"ADT-和-黑盒\"><a href=\"#ADT-和-黑盒\" class=\"headerlink\" title=\"ADT 和 黑盒\"></a>ADT 和 黑盒</h3><ol>\n<li>c可以用于设计和实现抽象数据类型，因为它可以限制函数和数据定义的作用域。，这个技巧也被成为黑盒设计。抽象数据类型的想法是hi很简单的–模块具有功能说明和接口说明，前者说明模块所执行的任务，后者定义模块的使用。</li>\n<li>限制对模块的访问时通过 <code>static</code> 的合理使用实现的。</li>\n</ol>\n<h4 id=\"地址列表模块案例\"><a href=\"#地址列表模块案例\" class=\"headerlink\" title=\"地址列表模块案例\"></a>地址列表模块案例</h4><pre><code><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> CHAPTER07_FUNC_ADDRLIST_H</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> CHAPTER07_FUNC_ADDRLIST_H</span></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 地址列表模块声明</div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 数据特征</div><div class=\"line\"> * 各种数据的最大长度，包括结尾的NUL字符和地址的最大数量</div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NAME_LENGTH 30 <span class=\"comment\">/*允许出现的最长名字*/</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ADDR_LENGTH 100 <span class=\"comment\">/*允许出现地址的最大长度*/</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PHONE_LENGTH 11<span class=\"comment\">/*允许出现的最大号码长度*/</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MAX_ADDRESSES 1000<span class=\"comment\">/*允许出现的字多地址个数*/</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 给出一个名字，查找对应的地址</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *</span></div><div class=\"line\"><span class=\"title\">lookup_address</span><span class=\"params\">(<span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *name)</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 给出一个名字，查找对应号码</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *</span></div><div class=\"line\"><span class=\"title\">lookup_phone</span><span class=\"params\">(<span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *name)</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">//CHAPTER07_FUNC_ADDRLIST_H</span></span></div></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 用于维护一个列表的抽象数据类型</div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"addrlist.h\"</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 每个地址的三个部分，分别保存在数组的对应元素中</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">char</span> name[MAX_ADDRESSES][NAME_LENGTH] = &#123;<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>&#125;;</div><div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">char</span> address[MAX_ADDRESSES][ADDR_LENGTH] = &#123;<span class=\"string\">\"4\"</span>, <span class=\"string\">\"5\"</span>, <span class=\"string\">\"6\"</span>&#125;;</div><div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">char</span> phone[MAX_ADDRESSES][PHONE_LENGTH] = &#123;<span class=\"string\">\"7\"</span>, <span class=\"string\">\"8\"</span>, <span class=\"string\">\"9\"</span>&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\">** 这个函数在数组中查找一个名字并返回对应下标</div><div class=\"line\">**/</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">find_entry</span><span class=\"params\">(<span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *name_to_find)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> entry;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> entry = <span class=\"number\">0</span>; entry &lt; MAX_ADDRESSES; ++entry) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">strcmp</span>(name_to_find, name[entry]) == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> entry;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *</span></div><div class=\"line\"><span class=\"title\">lookup_address</span><span class=\"params\">(<span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *name)</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> entry;</div><div class=\"line\">    entry = find_entry(name);</div><div class=\"line\">    <span class=\"keyword\">if</span> (entry == <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> address[entry];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *</span></div><div class=\"line\"><span class=\"title\">lookup_phone</span><span class=\"params\">(<span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *name)</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> entry;</div><div class=\"line\">    entry = find_entry(name);</div><div class=\"line\">    <span class=\"keyword\">if</span> (entry == <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> phone[entry];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</code></pre>","excerpt":"","more":"<h1 id=\"快速上手\"><a href=\"#快速上手\" class=\"headerlink\" title=\"快速上手\"></a>快速上手</h1><h1 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h1><h1 id=\"数据\"><a href=\"#数据\" class=\"headerlink\" title=\"数据\"></a>数据</h1><h1 id=\"语句\"><a href=\"#语句\" class=\"headerlink\" title=\"语句\"></a>语句</h1><h1 id=\"操作符和表达式\"><a href=\"#操作符和表达式\" class=\"headerlink\" title=\"操作符和表达式\"></a>操作符和表达式</h1><h1 id=\"指针\"><a href=\"#指针\" class=\"headerlink\" title=\"指针\"></a>指针</h1><h1 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h1><p>   c的函数与其它函数相似之处甚多。本章正式描述c的函数。</p>\n<h2 id=\"函数定义\"><a href=\"#函数定义\" class=\"headerlink\" title=\"函数定义\"></a>函数定义</h2><p>   类型<br>   函数名（形式参数）<br>   代码块<br>   <figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">function_name()</div><div class=\"line\">&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"程序7-1-在数组中寻找一个整型值\"><a href=\"#程序7-1-在数组中寻找一个整型值\" class=\"headerlink\" title=\"程序7.1:在数组中寻找一个整型值\"></a>程序7.1:在数组中寻找一个整型值</h3><pre><code><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*</div><div class=\"line\">** 在数组中寻找某个特定值的存储位置，并返回一个指向该位置的指针</div><div class=\"line\">*/</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> *</div><div class=\"line\"><span class=\"title\">find_int</span><span class=\"params\">(<span class=\"keyword\">int</span> key, <span class=\"keyword\">int</span> <span class=\"built_in\">array</span>[], <span class=\"keyword\">int</span> array_len)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; array_len; ++i) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">array</span>[i] == key) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> &amp;<span class=\"built_in\">array</span>[i];</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</code></pre><h2 id=\"函数声明\"><a href=\"#函数声明\" class=\"headerlink\" title=\"函数声明\"></a>函数声明</h2><p>   当编译器遇到一个函数调用时，它产生代码传递参数并调用这个函数，而且接收函数返回值（如果这个函数有返回值的话）。但是编译器如何知道这个函数接受的是什么类型的和多少数量的参数呢？如何知道函数的返回值类型呢？   </p>\n<h3 id=\"原型\"><a href=\"#原型\" class=\"headerlink\" title=\"原型\"></a>原型</h3><ol>\n<li>如果同一源文件的前面已经出现了该函数的定义，编译器就会记住它的参数数量和类型。</li>\n<li>使用函数原型。原型总结了函数定义的起始部分的声明，向编译器提供了如何调用该元素的完整信息。使用原型最方便的方法是把原型置于一个单独的文件，当其他源文件需要<br>这个函数原型时，就是用<code>#include</code>指令包含该文件。<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 函数原型:注意最后面的那个分号，它区分了函数原型和函数定义的起始部分。原型告诉编译器函数的参数数量和每个参数的类型以及函数的返回类型。</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> *</div><div class=\"line\"><span class=\"title\">find_int</span><span class=\"params\">(<span class=\"keyword\">int</span> key, <span class=\"keyword\">int</span> <span class=\"built_in\">array</span>[], <span class=\"keyword\">int</span> array_len)</span></span>;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"总结：从几个方面看，第2种方法比第1种方法更好。\"><a href=\"#总结：从几个方面看，第2种方法比第1种方法更好。\" class=\"headerlink\" title=\"总结：从几个方面看，第2种方法比第1种方法更好。\"></a>总结：从几个方面看，第2种方法比第1种方法更好。</h4><ol>\n<li>现在函数原型具有文件作用域。原型的一份拷贝可以作用于整个源文件，较之在函数每次调用前单独写一份原型要容易的多。</li>\n<li>现在函数原型只书写一次，这样就不会出现函数的多份原型的拷贝之间不一致的现象。</li>\n<li>如果对函数的定义进行了修改，我们只需要修改原型，并重新编译所有包含了该原型的源文件即可。</li>\n<li>如果函数的原型同时被<code>#include</code>指令包含到定义的源文件中，编译器就可以确认函数原型与函数定义是否一致。</li>\n</ol>\n<h4 id=\"思考：含糊声明存在危害。\"><a href=\"#思考：含糊声明存在危害。\" class=\"headerlink\" title=\"思考：含糊声明存在危害。\"></a>思考：含糊声明存在危害。</h4><ol>\n<li>考虑下面声明，它看上去有点含糊：<br><code>int * func();</code></li>\n<li>它即可以看作是一个旧式的声明(只给出func函数的返回类型),也可以看作是新式的没有参数的函数声明。最终，它会被解释成旧式风格的函数声明，目的是保持与ANSI标准之前的程序的兼容性。一个没有参数的函数声明应该写成如下的样子：<br><code>int * func(void);</code></li>\n<li>关键字void提示没有任何参数，而不是表示它是一个类型为void的参数。</li>\n</ol>\n<h3 id=\"函数的缺省认定\"><a href=\"#函数的缺省认定\" class=\"headerlink\" title=\"函数的缺省认定\"></a>函数的缺省认定</h3><ol>\n<li>当函数调用一个无法见到原型的函数时，编译器会认为函数返回一个整型值。对于那些不返回整型的函数，这种认定会引起错误。</li>\n</ol>\n<h2 id=\"函数的参数\"><a href=\"#函数的参数\" class=\"headerlink\" title=\"函数的参数\"></a>函数的参数</h2><ol>\n<li>c函数所有参数均以”传值调用”的方式进行传递。这意味着函数将获得参数值的一份拷贝，这样函数可以放心的修改这个拷贝值。而不必担心修改函数调用程序实际传给它的参数。这种调用与Modula和Pascal中的值参数（不是var参数）相同。</li>\n<li>但是如果被传递的参数是一个数组名，并且在函数中使用数组的下标引用该数组的参数，那么函数对数组元素进行的修改实际修改的是调用函数程序中的数组元素。函数将访问调用该函数程序的数组元素，数组并不会被复制。这个行为被称为“传址调用”。数组名的值实际上是一个指针，传递给函数的其实是这个指针的一份拷贝。</li>\n</ol>\n<h3 id=\"传参规则\"><a href=\"#传参规则\" class=\"headerlink\" title=\"传参规则\"></a>传参规则</h3><ol>\n<li>传递给函数的标量参数是传值调用的。</li>\n<li>传递给函数的数组参数，在行为上就像是它们通过传址调用的。</li>\n</ol>\n<h3 id=\"程序示例\"><a href=\"#程序示例\" class=\"headerlink\" title=\"程序示例\"></a>程序示例</h3><h4 id=\"奇偶校验\"><a href=\"#奇偶校验\" class=\"headerlink\" title=\"奇偶校验\"></a>奇偶校验</h4><pre><code><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 程序 7.2 奇偶校验</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span></div><div class=\"line\"><span class=\"title\">even_parity</span>(<span class=\"params\"><span class=\"keyword\">int</span> <span class=\"keyword\">value</span>, <span class=\"keyword\">int</span> n_bits</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> parity = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 计数值中为1的位的个数</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"keyword\">while</span> (n_bits &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">        parity += <span class=\"keyword\">value</span> &amp; <span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">value</span> &gt;&gt;= <span class=\"number\">1</span>;</div><div class=\"line\">        n_bits--;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">// 如果计数器的最低位是0,返回TRUE(表示1的位数为偶数个)</span></div><div class=\"line\">    <span class=\"keyword\">return</span> (parity % <span class=\"number\">2</span>) == <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</code></pre><ol>\n<li>这个函数在执行过程中会破坏两个参数的值。但这无妨，因为参数是通过值传递调用的。</li>\n</ol>\n<h4 id=\"整数交换，无效的版本\"><a href=\"#整数交换，无效的版本\" class=\"headerlink\" title=\"整数交换，无效的版本\"></a>整数交换，无效的版本</h4><pre><code><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 程序 7.3a </div><div class=\"line\"> * 交换程序中的两个整数(没有效果)</div><div class=\"line\"> */</span></div><div class=\"line\">void</div><div class=\"line\"><span class=\"keyword\">swap(int </span>a, int <span class=\"keyword\">b) </span>&#123;</div><div class=\"line\">    int temp = a<span class=\"comment\">;</span></div><div class=\"line\">    a = <span class=\"keyword\">b;</div><div class=\"line\"></span>    <span class=\"keyword\">b </span>= temp<span class=\"comment\">;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</code></pre><ol>\n<li>这个函数希望修改程序所传递的参数。但是这个程序是无效的，因为它们交换的实际上是参数的拷贝。</li>\n</ol>\n<h4 id=\"整数交换，有效的版本\"><a href=\"#整数交换，有效的版本\" class=\"headerlink\" title=\"整数交换，有效的版本\"></a>整数交换，有效的版本</h4><p>   为了访问调用程序的值，你必须向程序传递你所希望修改的变量的指针。接着函数必须对指针进行间接访问操作，修改需要改变的变量。<br>   <figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 程序 7.3b</div><div class=\"line\"> * 交换程序中的两个整数</div><div class=\"line\"> */</span></div><div class=\"line\">void</div><div class=\"line\"><span class=\"keyword\">swap(int </span>*a, int *<span class=\"keyword\">b) </span>&#123;</div><div class=\"line\">    int temp<span class=\"comment\">;</span></div><div class=\"line\">    temp = *a<span class=\"comment\">;</span></div><div class=\"line\">    *a = *<span class=\"keyword\">b;</div><div class=\"line\"></span>    *<span class=\"keyword\">b </span>= temp<span class=\"comment\">;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"将一个数组设置为0\"><a href=\"#将一个数组设置为0\" class=\"headerlink\" title=\"将一个数组设置为0\"></a>将一个数组设置为0</h4><pre><code><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 程序 7.4 把一个数组的所有元素都置为0</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clear_array</span><span class=\"params\">(<span class=\"keyword\">int</span> <span class=\"built_in\">array</span>[], <span class=\"keyword\">int</span> n_elements)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">while</span> (n_elements &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">        <span class=\"built_in\">array</span>[--n_elements] = <span class=\"number\">0</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</code></pre><ol>\n<li><code>n_elements</code> 是一个标量参数，所以它是传值调用的。在函数中修改它的值并不会影响调用程序中对应参数，另一方面，函数确实把调用函数的数组都置为0.</li>\n<li>数组的值实际上是一个指针，下标引用实际上是对这个指针进行间接访问。</li>\n<li>在声明数组参数时，不指定它的长度是合法的，因为函数并不为数组分配内存。间接访问操作将访问调用程序中的数组元素。</li>\n</ol>\n<h3 id=\"ADT-和-黑盒\"><a href=\"#ADT-和-黑盒\" class=\"headerlink\" title=\"ADT 和 黑盒\"></a>ADT 和 黑盒</h3><ol>\n<li>c可以用于设计和实现抽象数据类型，因为它可以限制函数和数据定义的作用域。，这个技巧也被成为黑盒设计。抽象数据类型的想法是hi很简单的–模块具有功能说明和接口说明，前者说明模块所执行的任务，后者定义模块的使用。</li>\n<li>限制对模块的访问时通过 <code>static</code> 的合理使用实现的。</li>\n</ol>\n<h4 id=\"地址列表模块案例\"><a href=\"#地址列表模块案例\" class=\"headerlink\" title=\"地址列表模块案例\"></a>地址列表模块案例</h4><pre><code><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> CHAPTER07_FUNC_ADDRLIST_H</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> CHAPTER07_FUNC_ADDRLIST_H</span></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 地址列表模块声明</div><div class=\"line\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 数据特征</div><div class=\"line\"> * 各种数据的最大长度，包括结尾的NUL字符和地址的最大数量</div><div class=\"line\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NAME_LENGTH 30 <span class=\"comment\">/*允许出现的最长名字*/</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ADDR_LENGTH 100 <span class=\"comment\">/*允许出现地址的最大长度*/</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PHONE_LENGTH 11<span class=\"comment\">/*允许出现的最大号码长度*/</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MAX_ADDRESSES 1000<span class=\"comment\">/*允许出现的字多地址个数*/</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 给出一个名字，查找对应的地址</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *</div><div class=\"line\"><span class=\"title\">lookup_address</span><span class=\"params\">(<span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *name)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 给出一个名字，查找对应号码</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *</div><div class=\"line\"><span class=\"title\">lookup_phone</span><span class=\"params\">(<span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *name)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">//CHAPTER07_FUNC_ADDRLIST_H</span></span></div></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 用于维护一个列表的抽象数据类型</div><div class=\"line\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"addrlist.h\"</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 每个地址的三个部分，分别保存在数组的对应元素中</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">char</span> name[MAX_ADDRESSES][NAME_LENGTH] = &#123;<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>&#125;;</div><div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">char</span> address[MAX_ADDRESSES][ADDR_LENGTH] = &#123;<span class=\"string\">\"4\"</span>, <span class=\"string\">\"5\"</span>, <span class=\"string\">\"6\"</span>&#125;;</div><div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">char</span> phone[MAX_ADDRESSES][PHONE_LENGTH] = &#123;<span class=\"string\">\"7\"</span>, <span class=\"string\">\"8\"</span>, <span class=\"string\">\"9\"</span>&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\">** 这个函数在数组中查找一个名字并返回对应下标</div><div class=\"line\">**/</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">find_entry</span><span class=\"params\">(<span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *name_to_find)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> entry;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> entry = <span class=\"number\">0</span>; entry &lt; MAX_ADDRESSES; ++entry) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">strcmp</span>(name_to_find, name[entry]) == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> entry;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *</div><div class=\"line\"><span class=\"title\">lookup_address</span><span class=\"params\">(<span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *name)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> entry;</div><div class=\"line\">    entry = find_entry(name);</div><div class=\"line\">    <span class=\"keyword\">if</span> (entry == <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> address[entry];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *</div><div class=\"line\"><span class=\"title\">lookup_phone</span><span class=\"params\">(<span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *name)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> entry;</div><div class=\"line\">    entry = find_entry(name);</div><div class=\"line\">    <span class=\"keyword\">if</span> (entry == <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> phone[entry];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</code></pre>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cizayloiz00006wul698wn1i2","tag_id":"cizayloja00026wulh4pb2pgn","_id":"cizaylojj00056wulvix7rtnc"},{"post_id":"cizayloj700016wulwy3u75x3","tag_id":"cizayloja00026wulh4pb2pgn","_id":"cizaylojn00076wulfjnyrokb"},{"post_id":"cizayloje00036wuliy5t0k6r","tag_id":"cizayloja00026wulh4pb2pgn","_id":"cizaylojo00086wulo8wkxlva"}],"Tag":[{"name":"读书笔记","_id":"cizayloja00026wulh4pb2pgn"}]}}